version: 2.1 
orbs:
  newman: postman/newman@0.0.2
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.13
    # directory where steps are run. Path must conform to the Go Workspace requirements
    working_directory: /go/src/github.com/greendinosaur/gh-commit-info

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
        # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of 
      - run: go get github.com/jstemmer/go-junit-report



      - run:
          name: Run unit tests
            # store the results of our tests in the $TEST_RESULTS directory
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --coverprofile=cover.out --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
            go tool cover -html=cover.out -o coverage.html
            mv coverage.html ${TEST_RESULTS}/coverage.html
      - run: make build # pull and build dependencies for the project

      - save_cache: # Store cache in the /go/pkg directory
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Start service
          command: src/api/main
          background: true # keep service running and proceed to next step

      - run:
          name: Validate service is working
          command: |
            sleep 5
            curl --retry 10 --retry-delay 1 -X GET http://localhost:8080/bobby

      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results

run_api_tests:
  executor: newman/postman-newman-docker
  steps:
    - newman/newman-run:
        collection: "tests/gh-commit-info smoke tests.postman_collection.json"
        environment: "tests/Localhost.postman_environment.json"

workflows:
  version: 2
  build-workflow:
    jobs:
      - build